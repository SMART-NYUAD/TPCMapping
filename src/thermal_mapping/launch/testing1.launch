<?xml version="1.0"?>
<launch>
<!-- Testing lidar_camera_fusion + hdl_graph_slam -->
    <arg name="launch_rviz" default="true"/>
    <arg name="file_rviz" default="testing1"/>

    <arg name="gazebo_world" default="$(find summit_xl_gazebo)/worlds/summit_xl_office.world"/>
	<arg name="default_xacro" default="summit_xl_std.urdf.xacro"/>
    <arg name="omni_drive" default="false"/>
    <arg if="$(arg omni_drive)" name="ros_planar_move_plugin" value="true"/>
	<arg unless="$(arg omni_drive)" name="ros_planar_move_plugin" default="true"/>
    <arg name="ros_planar_move_plugin_force_based" default="false"/>
    

	<!-- arguments robot a -->
	<arg name="id_robot_a" default="robot"/>
	<arg name="launch_robot_a" default="true"/>
	<arg name="xacro_robot_a" default="$(arg default_xacro)"/>

    <!-- Remapping needed for lidar_camera_fusion -->
    <remap from="/robot/robot_front_ptz_camera/image_raw" to="/camera/color/image_raw"/>
    <remap from="/robot/ouster/points" to="/velodyne_points"/>
    <include file="$(find summit_xl_gazebo)/launch/summit_xl_gazebo.launch">
        <arg name="launch_rviz" value="false"/>
        <arg name="gazebo_world" value="$(find thermal_mapping)/worlds/testing.world"/>
        <!-- general args -->
        <arg name="default_xacro" value="$(arg default_xacro)"/>
        <arg name="omni_drive" value="$(arg omni_drive)"/>
        <arg name="ros_planar_move_plugin" value="$(arg ros_planar_move_plugin)"/>
		<arg name="ros_planar_move_plugin_force_based" value="$(arg ros_planar_move_plugin_force_based)" />
		<!-- robot_a args -->
		<arg name="id_robot_a" value="$(arg id_robot_a)"/>
		<arg name="launch_robot_a" value="$(arg launch_robot_a)"/>
		<arg name="xacro_robot_a" value="$(arg xacro_robot_a)"/>
    </include>

    <include file="$(find hdl_graph_slam)/launch/hdl_graph_slam.launch">
        <arg name="points_topic" value="/velodyne_points" />
        <arg name="map_frame_id" value="map" />
        <arg name="lidar_odom_frame_id" value="odom" />
        <arg name="robot_odom_frame_id" value="robot_odom" />
    </include>

    <node if="$(arg launch_rviz)" name="rviz" pkg="rviz" type="rviz" required="true" args="-d $(find thermal_mapping)/rviz/$(arg file_rviz).rviz"/>

    <!-- <include file="$(find lidar_camera_fusion)/launch/vlp16OnImg.launch"/> -->

    <!-- Lidar Camera Fusion -->
    <param name="maxlen"          type="double" value="10.0" />    
    <param name="minlen"          type="double" value="0.0" />    
    <param name="max_ang_FOV"     type="double" value="2.7" />
    <param name="min_ang_FOV"     type="double" value="0.5" />
    <param name="pcTopic"         type="str"    value="/velodyne_points" />
    <param name="imgTopic"        type="str"    value="/camera/color/image_raw" />
    
    <param name="x_resolution"    type="double" value="0.25" />
    <param name="y_interpolation" type="double" value="10.0" />
    <param name="ang_Y_resolution"    type="double" value="2.05" />

    <group ns="matrix_file">
        <rosparam file="$(find thermal_mapping)/cfg/cfg_params.yaml" />
    </group>
    
    <node pkg="lidar_camera_fusion" type="lidar_camera_node" name="lidar_camera_node" output="screen"/>

</launch>